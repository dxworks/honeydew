name: Release Voyager

on:
  push:
    tags:
      - 'v*-voyager'

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [win, linux, osx]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-voyager"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Release for OS
        run: |
          mkdir bin
          dotnet publish -r ${{matrix.os}}-x64 --self-contained true -p:PublishSingleFile=true -o bin -c Release -p:Version=${{ steps.semver_parser.outputs.semver }} Honeydew/Honeydew.csproj

      - name: Prepare Assets
        run: |
          mkdir -p ${{matrix.os}}
          rm bin/*.pdb
          cp -R bin/* ${{matrix.os}}

      - name: Create Archive
        run: zip -r honeydew-${{ matrix.os }}.zip ${{matrix.os}}

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: honeydew-${{ matrix.os }}.zip
          path: honeydew-${{ matrix.os }}.zip

#  build-publish-and-sign-for-mac:
#    name: Build, Publish and Sign (osx)
#    runs-on: macos-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Extract Semver
#        id: semver_parser
#        run: |
#          semver=${TAG#"refs/tags/v"}
#          semver=${semver%"-voyager"}
#
#          echo ::set-output name=semver::$semver
#        env:
#          TAG: ${{ github.ref }}
#
#      - name: Set up .NET Core
#        uses: actions/setup-dotnet@v1
#        with:
#          dotnet-version: '6.0.x'
#          include-prerelease: true
#
#      - name: dotnet publish
#        run: |
#          mkdir bin
#          dotnet publish -r osx-x64 --self-contained true -p:PublishSingleFile=true -o bin -c Release -p:Version=${{ steps.semver_parser.outputs.semver }} Honeydew/Honeydew.csproj
#
#      - name: Prepare Assets
#        run: |
#          mkdir -p macos
#          rm ./bin/*.pdb
#          cp ./bin/Honeydew macos/Honeydew
#          chmod +x macos/Honeydew
#
#      - name: Add Cert to Keychain
#        uses: apple-actions/import-codesign-certs@v1
#        with:
#          p12-file-base64: ${{ secrets.MAC_CERT_BASE64 }}
#          p12-password: ${{ secrets.MAC_CERT_PASSWORD }}
#
#      - name: Sign Binaries
#        run: "sh macSigningScripts/SignMac.sh \"macos/Honeydew\" \"macos/*\" \"Developer ID Application: Andrei Mario Rivis (3L7BS894T6)\" \"macSigningScripts/entitlements.plist\""
#
#      - name: Zip Binary for Notarizing
#        run:
#          zip -r honeydew-osx.zip macos
#
#      - name: Notarize Binaries
#        run: "sh macSigningScripts/Notarize.sh \"mario.rivis@gmail.com\" \"${{ secrets.MAC_DEV_PASSWORD }}\" \"group.org.dxworks\" \"3L7BS894T6\" \"./honeydew-osx.zip\""
#        continue-on-error: true
#
#      - name: Upload artifact
#        uses: actions\upload-artifact@v2
#        with:
#          name: honeydew-osx.zip
#          path: honeydew-osx.zip

  release-and-upload:
    name: Release Honeydew for Voyager
    runs-on: ubuntu-latest
    needs: build-and-publish
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: Prepare Assets
        run: |
          mkdir -p honeydew/results
          mkdir -p honeydew/bin

          cp README.md honeydew/README.md
          cp instrument.yml honeydew/instrument.yml

          unzip ./honeydew-win.zip/honeydew-win.zip -d honeydew/bin
          unzip ./honeydew-linux.zip/honeydew-linux.zip -d honeydew/bin
          unzip ./honeydew-osx.zip/honeydew-osx.zip -d honeydew/bin

          ls -al -R honeydew

          chmod +x honeydew/bin/win/Honeydew.exe
          chmod +x honeydew/bin/linux/Honeydew
          chmod +x honeydew/bin/macos/Honeydew

      - name: Zip Voyager Release
        run: zip -rl honeydew.zip honeydew

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Honeydew ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./honeydew.zip
          asset_name: honeydew.zip
          asset_content_type: application/zip
