name: Release

on:
  push:
    tags:
      - 'v*'
      - '!*-voyager'

jobs:
  build-and-publish-os-specific:
    name: Build and Publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        os: [ win, linux, osx ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-voyager"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Release for OS
        run: |
          mkdir bin
          dotnet publish -r ${{matrix.os}}-x64 --self-contained false -p:PublishSingleFile=true -o bin -c Release -p:Version=${{ steps.semver_parser.outputs.semver }} Honeydew/Honeydew.csproj

      - name: Prepare Assets
        run: |
          mkdir -p honeydew/results
          cp README.md honeydew/README.md
          rm bin/*.pdb
          cp -R bin/* honeydew

      - name: Create Archive
        run: zip -r honeydew-${{ matrix.os }}.zip honeydew

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: honeydew-${{ matrix.os }}.zip
          path: honeydew-${{ matrix.os }}.zip

  build-scriptbee-plugin:
    name: Build ScriptBee Plugin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-voyager"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Release for OS
        run: |
          mkdir bin
          dotnet publish -o bin -c Release -p:Version=${{ steps.semver_parser.outputs.semver }} Honeydew/Honeydew.csproj

      - name: Prepare Assets
        run: |
          mkdir honeydew
          cp manifest.yaml honeydew/manifest.yaml
          cp README.md honeydew/README.md
          rm bin/*.pdb
          cp -R bin/*.dll honeydew

      - name: Create Archive
        run: zip -j honeydew-scriptbee.zip honeydew/*

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: honeydew-scriptbee.zip
          path: honeydew-scriptbee.zip

  release-and-upload:
    name: Release and Upload
    runs-on: ubuntu-latest
    needs: [ build-and-publish-os-specific, build-scriptbee-plugin ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-voyager"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: List all downloads
        run: |
          echo "Running in directory $PWD"
          ls -R -al

      - name: Prepare Release Notes
        run: touch ${{ github.workspace }}/releaseNotes/v${{ steps.semver_parser.outputs.semver }}.md

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Honeydew ${{ steps.semver_parser.outputs.semver }}
          body_path: ${{ github.workspace }}/releaseNotes/v${{ steps.semver_parser.outputs.semver }}.md
          body: ""
          prerelease: false
          draft: false
          fail_on_unmatched_files: true
          files: |
            ./honeydew-win.zip/honeydew-win.zip
            ./honeydew-linux.zip/honeydew-linux.zip
            ./honeydew-osx.zip/honeydew-osx.zip
            ./honeydew-scriptbee.zip/honeydew-scriptbee.zip


  npm-publish:
    name: Publish Npm Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
          cache: 'npm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@dxworks'

      - name: Prepare Node Dependencies
        run: npm install

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-voyager"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - name: Setup Version
        run: node_modules/.bin/json -I -f package.json -e "this.version='$VERSION'"
        env:
          VERSION: ${{ steps.semver_parser.outputs.semver }}

      - name: Publish NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node with NPM Package Registry
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          scope: '@dxworks'

      - name: Publish on NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker-publish:
    name: Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract Semver
        id: semver_parser
        run: |
          semver=${TAG#"refs/tags/v"}
          semver=${semver%"-voyager"}

          echo ::set-output name=semver::$semver
        env:
          TAG: ${{ github.ref }}

      - name: Build Docker Image
        run: |
          docker build -t dxworks/honeydew:${{ steps.semver_parser.outputs.semver }} -f ./Dockerfile .
      - name: Publish Docker Images
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push dxworks/honeydew:${{ steps.semver_parser.outputs.semver }}
