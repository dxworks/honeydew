name: Release

on:
  push:
    branches:
      - "ghactions"
    tags:
      - "v*"
      - "!*-voyager"


jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Release for Windows
        run: |
          mkdir bin/windows
          dotnet publish -r win-x64 --self-contained true -p:PublishSingleFile=true -o bin/windows -c Release Honeydew/Honeydew.csproj

      - name: Release for Linux
        run: |
          mkdir bin/linux
          dotnet publish -r linux-x64 --self-contained true -p:PublishSingleFile=true -o bin/linux -c Release Honeydew/Honeydew.csproj

      - name: Release for Mac
        run: |
          mkdir bin/mac
          dotnet publish -r osx-x64 --self-contained true -p:PublishSingleFile=true -o bin/mac -c Release Honeydew/Honeydew.csproj

      - name: Print All assets
        run: |
          ls -R -al

      - name: Prepare Assets
        run: |
          mkdir honeydew
          mkdir honeydew/bin
          cp README.md honeydew/README.md
          cp -r bin honeydew/bin

      - name: Create Archive
        run: zip -r honeydew.zip honeydew

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: test-${$GITHUB_RUN_NUMBER}
          release_name: Honeydew ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./honeydew.zip
          asset_name: honeydew.zip
          asset_content_type: application/zip

